<launch>

  <arg name="model" default="burger" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="2"/>
  <arg name="y_pos" default="-4.0"/>
  <arg name="z_pos" default="0.0"/>
  <!-- <arg name="yaw_init" default="3.14"/> -->
  <arg name="yaw_init" default="0.0"/>

  <arg name="open_rviz" default="true"/>
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />
  <arg name="move_forward_only" default="false"/>

  <!-- Launch gazebo simulation -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find got_node)/worlds/world02_mod.world"/> -->
    <!-- <arg name="world_name" value="$(find rosbot_gazebo)/worlds/maze.world"/> -->
    <arg name="world_name" value="$(find got_node)/worlds/maze.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>


  <node pkg="got_node" type="odometry_noise.py" name="odometry_with_noise"/>
  <!-- <node pkg="plotjuggler" type="PlotJuggler" name="plotter"/> -->

  <!-- <node pkg="got_node" type="go_to_point.py" name="navigation"/> -->


  <!-- Launch Turtlebot model -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -Y $(arg yaw_init) -param robot_description" />

  <!-- Publish location of GoT beacons -->
<!--   <node pkg="tf" type="static_transform_publisher" name="beacon1_broadcaster" args="-5 -5 5 0 0 0 1 odom beacon1 100" />
  <node pkg="tf" type="static_transform_publisher" name="beacon2_broadcaster" args="5 -5 5 0 0 0 1 odom beacon2 100" />
  <node pkg="tf" type="static_transform_publisher" name="beacon3_broadcaster" args="0 0 5 0 0 0 1 odom beacon3 100" />
  <node pkg="tf" type="static_transform_publisher" name="beacon4_broadcaster" args="-5 5 5 0 0 0 1 odom beacon4 100" />
  <node pkg="tf" type="static_transform_publisher" name="beacon5_broadcaster" args="5 5 5 0 0 0 1 odom beacon5 100" /> -->

  <!-- <include file="$(find turtlebot3_gazebo)/launch/turtlebot3_gazebo_rviz.launch" /> -->
  <!-- <include file="$(find turtlebot3_gazebo)/launch/turtlebot3_world.launch" /> -->

<!--   <node pkg="gmapping" type="slam_gmapping" name="gmapping">
      <param name="base_frame" value="base_link"/>
      <param name="odom_frame" value="odom" />
      <param name="delta" value="0.1" /<name />
  </node> -->

  <!-- Launch SLAM node  and rviz -->
  <include file="$(find turtlebot3_slam)/launch/turtlebot3_slam.launch">
    <arg name="slam_methods" value="hector"/>
    <!-- <arg name="open_rviz" value="$(arg open_rviz)"/> -->
    <arg name="open_rviz" value="false"/>
  </include>

<!--   <node pkg="move_base" type="move_base" name="move_base" output="screen">
      <param name="controller_frequency" value="10.0"/>
      <rosparam file="$(find got_node)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find got_node)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find got_node)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find got_node)/config/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find got_node)/config/trajectory_planner.yaml" command="load" />
  </node> -->

  <node pkg="got_node" type="got_position3" name="got_pos"/>
  <!-- <node pkg="got_node" type="got_position2" name="got_pos2"/> -->

  <include file="$(find got_node)/launch/robot_localization.launch"/>


 <!-- Navigation related -->
  <!-- Arguments -->
  <!-- <arg name="map_file" default="$(find turtlebot3_navigation)/maps/map.yaml"/> -->

  <!-- Turtlebot3  - Already initialized in turtlebot3_slam.launch-->
<!--   <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include> -->


  <!-- Map server -->
  <!-- <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/> -->

  <!-- AMCL -->
  <include file="$(find turtlebot3_navigation)/launch/amcl.launch"/>


  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
  </node>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
          <!-- args="-d $(find turtlebot3_slam)/rviz/turtlebot3_$(arg slam_methods).rviz"/> -->
  </group>

</launch>