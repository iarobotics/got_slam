<launch>

  <!-- <arg name="odom_topic" default="odom_noisy"/> -->
  <arg name="x_init" default="0.0"/>
  <arg name="y_init" default="0.0"/>
  <arg name="z_init" default="0.0"/>
  <!-- <arg name="yaw_init" default="3.14"/> -->
  <arg name="yaw_init" default="0.0"/>

  <arg name="odom_topic" default="odom"/>
  <arg name="imu_topic" default="imu"/>

  <arg name="base_link_frame" default="base_footprint"/>
  <arg name="map_frame" default="map"/>
  <arg name="odom_frame" default="odom"/>
  <!-- map->global, odom -> local -->
  <arg name="world_frame" default="$(arg odom_frame)"/>

  <arg name="odometry_filtered_topic" default="odom_filtered"/>


  <arg name="node_name" default="ekf_node"/>
  <arg name="publish_tf" default="true" />
  <arg name="use_got" default="false" />
  <arg name="got_topic" default="got_pose_corrected"/>

  <arg name="use_got_threshold" default="true"/>

  <arg name="use_slam" default="false"/>
  <arg name="slam_pose_topic" default="slam_pose_cov"/>

  



  <!-- Launch got_node publishing geometry_msgs/PoseWithCovarianceStamped -->
  <!-- <node pkg="got_node" type="got_position" name="got_position_node" /> -->


<!-- So, to estimate and publish both the map → odom and the odom → base_linktransforms (or state estimates), we need two robot_localization state estimators:

    one for the odom → base_link transform, which gets all continuous inputs (acceleration and linear and angular velocity) and
    one for the map → odom transform, which gets all (both continuous and non-continuous) inputs (acceleration, linear and angular velocity, position and orientation). -->


  <!-- odom -> base_link -->
  <!-- robot_localization EKF node for the odom frame -->
  <node pkg="robot_localization" type="ekf_localization_node" name="$(arg node_name)" clear_params="true">

    <!-- <rosparam command="load" file="$(find robot_localization)/params/ekf_template.yaml" /> -->

    <!-- <param name="frequency" value="10." />   -->
    <param name="frequency" value="50" /> 
    <param name="sensor_timeout" value="0.2" />  
    <param name="two_d_mode" value="true" />
    <param name="publish_tf" value="$(arg publish_tf)" />
    <param name="map_frame" value="$(arg map_frame)" />
    <param name="odom_frame" value="$(arg odom_frame)" />
    <param name="base_link_frame" value="$(arg base_link_frame)" />
    <param name="world_frame" value="$(arg world_frame)" />
    <param name="print_diagnostics" value="true" />

    <remap from="odometry/filtered" to="$(arg odometry_filtered_topic)" />
    <!-- <remap from="imu" to="imu/filtered" /> -->


    <!-- <rosparam param="initial_state">[$(arg x_init),  $(arg y_init),  $(arg z_init), -->
    <!-- <rosparam param="initial_state">[2.0,  -4.0,  0.0, -->
    <rosparam param="initial_state">[0.0,  0.0,  0.0,
                                     0.0,  0.0,  0.0,
                                     0.0,  0.0,  0.0,
                                     0.0,  0.0,  0.0,
                                     0.0,  0.0,  0.0]</rosparam>
    <param name="odom0" value="$(arg odom_topic)" />
    <param name="odom0_differential" value="true"/>
    <param name="odom0_relative" value="false"/>
    <rosparam param="odom0_config">[false, false, false,
                                    false, false, false,
                                    true, true, false,
                                    false, false, true,
                                    false, false, false]</rosparam>
    <param name="imu0" value="$(arg imu_topic)" />
    <param name="imu0_differential" value="true"/>
    <param name="imu0_relative" value="true"/>
    <rosparam param="imu0_config">[false, false, false,
                                   false, false, true,
                                   false, false, false,
                                   false, false, true,
                                   false, false, false]</rosparam>
    <!-- Relevant for global positioning -->
    <param if="$(arg use_got)" name="pose0" value="$(arg got_topic)" />
    <param if="$(arg use_got)" name="pose0_differential" value="false"/>
    <param if="$(arg use_got)" name="pose0_relative" value="false"/>
    <param if="$(arg use_got_threshold)" name="pose0_rejection_threshold" value="0.2"/>
    <rosparam if="$(arg use_got)" param="pose0_config">[true, true, false,
                                                        false, false, false,
                                                        false, false, false,
                                                        false, false, false,
                                                        false, false, false]</rosparam>

    <param if="$(arg use_slam)" name="pose1" value="$(arg slam_pose_topic)" />
    <param if="$(arg use_slam)" name="pose1_differential" value="true"/>
    <param if="$(arg use_slam)" name="pose1_relative" value="false"/>
    <param if="$(arg use_slam)" name="pose1_rejection_threshold" value="0.2"/>
    <rosparam if="$(arg use_slam)" param="pose1_config">[true, true, false,
                                                        false, false, false,
                                                        false, false, false,
                                                        false, false, false,
                                                        false, false, false]</rosparam>

    <rosparam if="$(arg use_got)" param="process_noise_covariance">[1e-3, 0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                                    0,    1e-3, 0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                                    0,    0,    0.06, 0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                                    0,    0,    0,    0.03, 0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                                    0,    0,    0,    0,    0.03, 0,    0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                                    0,    0,    0,    0,    0,    0.06, 0,     0,     0,    0,    0,    0,    0,    0,    0,
                                                                    0,    0,    0,    0,    0,    0,    0.025, 0,     0,    0,    0,    0,    0,    0,    0,
                                                                    0,    0,    0,    0,    0,    0,    0,     0.025, 0,    0,    0,    0,    0,    0,    0,
                                                                    0,    0,    0,    0,    0,    0,    0,     0,     0.04, 0,    0,    0,    0,    0,    0,
                                                                    0,    0,    0,    0,    0,    0,    0,     0,     0,    0.01, 0,    0,    0,    0,    0,
                                                                    0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0.01, 0,    0,    0,    0,
                                                                    0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0.02, 0,    0,    0,
                                                                    0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0.01, 0,    0,
                                                                    0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0.01, 0,
                                                                    0,    0,    0,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,    0.015]</rosparam>
  </node>


</launch> 